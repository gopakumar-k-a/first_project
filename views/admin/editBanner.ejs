<%-include('header.ejs') %>
    <div class="screen-overlay"></div>
    <%- include('sideNav.ejs') %>
        <main class="main-wrap">
            <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.min.js"
                integrity="sha512-9KkIqdfN7ipEW6B6k+Aq20PV31bjODg4AA52W+tYtAE0jE0kMx49bjJ3FgvS56wzmyfMUHbQ4Km2b7l9+Y/+Eg=="
                crossorigin="anonymous" referrerpolicy="no-referrer"></script>
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.css"
                integrity="sha512-bs9fAcCAeaDfA4A+NiShWR886eClUcBtqhipoY5DM60Y1V3BbVQlabthUBal5bq8Z8nnxxiyb1wfGX2n76N1Mw=="
                crossorigin="anonymous" referrerpolicy="no-referrer" />
            <section class="content-main">
                <header class="main-header navbar">
                    <div class="col-search">
                        <div class="card mb-4">
                            <div class="card-body">
                                <label class="form-label">Current Image</label>

                                <div id="current-image-container" style="overflow: hidden; width: 50%; height: 50%;"
                                    class="col-lg-12">
                                    <img src="/admin-assets/uploads/<%=bannerData.imageUrl%>" alt="">
                                </div>

                                <div>


                                    <label class="form-label">Images</label>
                                    <div id="cropped-image-container" style="overflow: hidden;width: 70%;"
                                        class="col-lg-12">
                                    </div>
                                    <input type="file" id="image-input">
                                    <!-- <input class="form-control" type="file"> -->
                                </div>
                            </div>
                        </div>
                        <form id="image-form" action="/admin/banner/edit" method="post" enctype="multipart/form-data">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Name</label>
                                <input type="text" id="name" placeholder="Type here" class="form-control"
                                    placeholder="Name" readonly value="<%=bannerData.name%>">
                            </div>
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Title</label>
                                <input type="text" id="title" name="title" placeholder="Title" class="form-control"
                                    value="<%=bannerData.title%>">
                            </div>
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Subtitle</label>
                                <input type="text" id="subtitle" name="subtitle" placeholder="Subtitle"
                                    class="form-control" value="<%=bannerData.subtitle%>">
                            </div>
                            <!-- <div class="mb-4">
                        <label for="product_name" class="form-label">Name</label>
                        <input type="text" id="subtitle" name="subtitle"
                            placeholder="Subtitle" class="form-control">
                    </div> -->
                            <!-- <div class="mb-4">
                        <label for="product_name" class="form-label">Name</label>
                        <textarea id="description" name="description"
                            placeholder="Description" rows="4"></textarea>
                    </div> -->
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <textarea id="description" name="description" placeholder="Description"
                                    class="form-control" rows="4"><%=bannerData.description%></textarea>
                            </div>
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Target
                                    Url</label>
                                <input type="text" id="targetedUrl" name="targetedUrl" placeholder="Targeted Url"
                                    class="form-control" value="<%=bannerData.targetUrl%>">
                            </div>
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="mb-4">
                                        <label for="product_name" class="form-label">Start
                                            Date</label>
                                        <input type="date" id="startDate" name="startDate" placeholder="Start Date"
                                            class="form-control" class="form-control" value="<%=startDate%>">
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-4">
                                        <label for="product_name" class="form-label">End
                                            Date</label>
                                        <input type="date" id="endDate" name="endDate" placeholder="End Date"
                                            class="form-control" class="form-control" value="<%=endDate%>">
                                    </div>
                                </div>
                            </div>

                            <!-- <div class="mb-4">
                        <label for="product_name" class="form-label">Name</label>
                        <input type="date" id="startDate" name="startDate"
                            placeholder="Start Date" class="form-control">
                    </div> -->
                            <!-- <div class="mb-4">
                        <label for="product_name" class="form-label">Name</label>
                        <input type="date" id="endDate" name="endDate"
                            placeholder="End Date" class="form-control">
                    </div> -->
                            <div id="cropped-image-container"
                                style="max-width: 385px; max-height: 237.5px; overflow: hidden;">
                            </div>
                            <input type="hidden" id="cropped-image-input" name="" value="">
                            <input type="text" hidden value="<%=bannerData._id%>" name="bannerId" id="bannerId">
                            <input type="file" id="imageInput" name="image" hidden>
                            <button class="btn btn-md rounded font-sm hover-up" id="submit-button">Edit
                                Banner</button>
                        </form><!-- card end// -->
                    </div>
                    </div>
                    </div>
                    <div class="col-nav">
                        <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"> <i
                                class="material-icons md-apps"></i> </button>

                    </div>
                </header>
                <script>
                    const imageInput = document.getElementById('image-input');
                    const croppedImageContainer = document.getElementById('cropped-image-container');
                    const submitButton = document.getElementById('submit-button');
                    const croppedImageInput = document.getElementById('cropped-image-input');
                    const form = document.getElementById('image-form');

                    let cropper;
                    imageInput.addEventListener('change', (event) => {
                        const imageFile = event.target.files[0];
                        if (imageFile) {
                            // An image file is selected, proceed with Cropper initialization
                            const imageURL = URL.createObjectURL(imageFile);
                            const image = document.createElement('img');
                            image.src = imageURL;
                            // Append the image to the container
                            croppedImageContainer.innerHTML = '';
                            croppedImageContainer.appendChild(image);
                            // Initialize Cropper on the image with the fixed ID
                            cropper = new Cropper(image, {
                                aspectRatio: 16 / 9,
                            });
                        } else {
                            // No image file selected, reset Cropper and clear the container
                            if (cropper) {
                                cropper.destroy();
                                cropper = null;
                            }
                            croppedImageContainer.innerHTML = '';
                        }
                    });
                    submitButton.addEventListener('click', async () => {
                        try {
                         
                            console.log('this is cropper ', cropper);
                            if (cropper) {

                                // Get the cropped canvas
                                const canvas = cropper.getCroppedCanvas();

                                // Convert canvas data to a data URL
                                const dataURL = canvas.toDataURL('image/jpeg', 0.8);

                                // Convert data URL to Blob
                                const blob = await fetch(dataURL).then(res => res.blob());

                                // Create File object with a fake name (you can adjust the filename as needed)
                                const croppedImageFile = new File([blob], 'cropped-image.jpg', { type: 'image/jpeg' });

                                console.log('IMAGE FILLE ', croppedImageFile);

                                // const imageInput=document.getElementById('imageInput')
                                // imageInput.value=croppedImageFile
                                // form.submit()
                                // croppedImageInput.value = croppedImageFile;

                                const formData = new FormData();
                                formData.append('croppedImage', croppedImageFile);


                                // Append other input elements to FormData
                                const nameInput = document.getElementById('name');
                                const titleInput = document.getElementById('title');
                                const subtitleInput = document.getElementById('subtitle');
                                const descriptionInput = document.getElementById('description');
                                const startDateInput = document.getElementById('startDate');
                                const endDateInput = document.getElementById('endDate');
                                const targetedUrl = document.getElementById('targetedUrl')
                                const bannerId = document.getElementById('bannerId')
                                formData.append('name', nameInput.value);
                                formData.append('title', titleInput.value);
                                formData.append('subtitle', subtitleInput.value);
                                formData.append('description', descriptionInput.value);
                                formData.append('startDate', startDateInput.value);
                                formData.append('endDate', endDateInput.value);
                                formData.append('targetedUrl', targetedUrl.value)
                                formData.append('bannerId', bannerId.value)



                                // Send FormData to the backend using fetch or XMLHttpRequest
                                // const response = await fetch('/admin/banner/edit', {
                                //     method: 'POST',
                                //     body: formData
                                // });

                                // const data = await response.json();

                                // if (response.ok) {
                                //     window.location.reload();
                                // } else {
                                //     // Handle error from backend
                                //     console.error('Backend error:', data.error);
                                //     // Display appropriate error message to the user
                                // }


                                // const response = await fetch('/admin/banner/edit', {
                                //     method: 'POST',
                                //     body: formData
                                // });

                                // const data = await response.json();

                                // if (!response.ok) {
                                //     const out=await response.json()
                                //     if(out){

                                //         window.location.reload();
                                //     }
                                // } 
                                // else {
                                //     // Handle error from backend
                                //     console.error('Backend error:', data.error);
                                //     // Display appropriate error message to the user
                                // }



                                fetch('/admin/banner/edit', {
                                    method: 'POST',
                                    body: formData,
                               
                                })
                                    .then(response => response.json(message))
                                    .then(data => {
                                    
                                        window.location.reload();
                                    })
                                    .catch(error => console.error(error));





                                // fetch('/admin/banner/edit', {
                                //     method: 'POST',
                                //     body: formData,

                                // })
                                //     .then(response => {
                                //         console.log(response);
                                //         if (response.ok) {
                                //             return response.json(); // Parse the response if it's OK
                                //         } else {
                                //             throw new Error('Network response was not ok.');
                                //         }
                                //     })
                                //     .then(data => {


                                //     })
                                //     .catch(error => {
                                //         console.error('Fetch error:', error);
                                //         // Handle the error or display an appropriate message
                                //     });



                            } else if (cropper == null) {
                                console.log('inside else ');
                                // No image file selected, submit the form without the image
                                // form.submit()

                                const formData = new FormData(form);
                                fetch('/admin/banner/edit', {
                                    method: 'POST',
                                    body: formData,
                                })
                                    .then(response => response.json())
                                    .then(data => {
                                        console.log(data);
                                        window.location.reload();
                                    })
                                    .catch(error => console.error(error));
                            }
                        } catch (error) {
                            console.error(error.message);
                        }
                    });


                </script>


            </section>
            <!-- content-main end// -->
            <footer class="main-footer font-xs">
                <div class="row pb-30 pt-15">
                    <div class="col-sm-6">
                        <script>
                            document.write(new Date().getFullYear())
                        </script> ©, Evara - HTML Ecommerce Template .
                    </div>
                    <div class="col-sm-6">
                        <div class="text-sm-end">
                            All rights reserved
                        </div>
                    </div>
                </div>
            </footer>
        </main>
        <script src="assets/js/vendors/jquery-3.6.0.min.js"></script>
        <script src="assets/js/vendors/bootstrap.bundle.min.js"></script>
        <script src="assets/js/vendors/select2.min.js"></script>
        <script src="assets/js/vendors/perfect-scrollbar.js"></script>
        <script src="assets/js/vendors/jquery.fullscreen.min.js"></script>
        <!-- Main Script -->
        <script src="assets/js/main.js" type="text/javascript"></script>
        </body>


        <!-- Mirrored from wp.alithemes.com/html/evara/evara-backend/page-form-product-1.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 01 Aug 2021 15:33:32 GMT -->

        </html>